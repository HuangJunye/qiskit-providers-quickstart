id: local-simulators
title: Local Simulators
description: Software packages that allow users to simulate quantum programs in your local computer.
providers:
  - title: Aer
    description: Aer is a high performance simulator for quantum circuits that includes noise models.
    installation: pip install qiskit-aer
    websiteCta:
      label: null
      url: null
    docsCta:
      label: Docs
      url: https://qiskit.org/ecosystem/aer/
    sourceCta:
      label: GitHub
      url: https://github.com/Qiskit/qiskit-aer
    code:
      sampler: |-
        from qiskit_aer.primitives import Sampler
        sampler = Sampler()
      backend: |-
        from qiskit_aer import AerSimulator
        backend = AerSimulator()
  - title: MQT DDSIM
    description: MQT DDSIM is a quantum circuit simulator based on decision diagrams written in C++.
    installation: pip install mqt.ddsim
    websiteCta:
      label: Website
      url: https://www.cda.cit.tum.de/research/quantum_simulation/
    docsCta:
      label: Docs
      url: https://ddsim.readthedocs.io/en/latest/
    sourceCta:
      label: GitHub
      url: https://github.com/cda-tum/ddsim
    code:
      backend: |-
        from mqt import ddsim
        provider = ddsim.DDSIMProvider()
        backend = provider.get_backend('qasm_simulator')
  - title: NVIDIA cuStateVec
    description: NVIDIA cuStateVec is a high-performance library dedicated to operations with state vectors for expressing quantum algorithms.
    installation: conda install -c conda-forge custatevec
    websiteCta:
      label: Website
      url: https://developer.nvidia.com/cuquantum-sdk
    docsCta:
      label: Docs
      url: https://docs.nvidia.com/cuda/cuquantum/custatevec/index.html
    sourceCta:
      label: GitHub
      url: https://github.com/NVIDIA/cuQuantum
    code:
      backend: |-
        from cusvaer.backends import StatevectorSimulator
        backend = StatevectorSimulator()
  - title: QuaC
    description: QuaC is a parallel time dependent open quantum systems solver.
    installation: |-
      git clone https://github.com/0tt3r/QuaC-qiskit
      cd QuaC-qiskit
      pip install .
    websiteCta:
      label: Website
      url: https://0tt3r.github.io/QuaC/
    docsCta:
      label: Docs
      url: https://github.com/0tt3r/QuaC-qiskit/tree/master/examples/demos
    sourceCta:
      label: GitHub
      url: https://github.com/0tt3r/QuaC-qiskit
    code:
      backend: |-
        from quac_qiskit import Quac
        backend = Quac.get_backend("fake_vigo_density_simulator")